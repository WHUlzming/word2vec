import   java  .  net  .  *  ; 

import   java  .  io  .  *  ; 

import   java  .  util  .  *  ; 



public   class   JDPServer   implements   JDPCommandInterface  { 









private   ServerSocket   serverSocket  ; 









private   Socket   clientSocket  ; 









private   ObjectOutputStream   out  ; 









private   BufferedReader   in  ; 









int   port  ; 











public   JDPServer  (  int   initialPort  )  { 

port  =  initialPort  ; 

boolean   socketOpened  =  false  ; 

while  (  !  socketOpened  )  { 

try  { 

serverSocket  =  new   ServerSocket  (  port  )  ; 

System  .  out  .  println  (  "JDPServer running on port "  +  port  )  ; 

socketOpened  =  true  ; 

}  catch  (  IOException   e  )  { 

if  (  ++  port  >  65536  )  { 

System  .  err  .  println  (  "No available port"  )  ; 

System  .  exit  (  1  )  ; 

} 

} 

} 

} 









public   void   acceptConnection  (  )  { 

System  .  out  .  println  (  "Waiting for connection..."  )  ; 

try  { 

clientSocket  =  serverSocket  .  accept  (  )  ; 

System  .  out  .  println  (  "Connection detected!"  )  ; 

out  =  new   ObjectOutputStream  (  clientSocket  .  getOutputStream  (  )  )  ; 

in  =  new   BufferedReader  (  new   InputStreamReader  (  clientSocket  .  getInputStream  (  )  )  )  ; 

}  catch  (  IOException   e  )  { 

System  .  err  .  println  (  "Accept failed."  )  ; 

System  .  exit  (  1  )  ; 

} 

} 









public   void   closeConnection  (  )  { 

try  { 

out  .  close  (  )  ; 

in  .  close  (  )  ; 

clientSocket  .  close  (  )  ; 

}  catch  (  IOException   e  )  { 

System  .  err  .  println  (  "Close failed."  )  ; 

} 

} 

