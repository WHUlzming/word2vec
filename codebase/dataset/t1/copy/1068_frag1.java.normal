public   void   writer__initProperties  (  )  { 

String  [  ]  propertyList  =  new   String  [  ]  {  "parse.SectionMarker"  ,  "!"  ,  "jostraca.TemplateScript.CanonicalName.c"  ,  "c"  ,  "main.ExecuteCodeWriter"  ,  "yes"  ,  "main.CodeWriter.argument.name.OutputFolder"  ,  "o="  ,  "main.ExternalControllerOptions"  ,  ""  ,  "lang.CommentLineSuffix"  ,  ""  ,  "main.DumpTemplate"  ,  "no"  ,  "lang.StringEscapeTransform"  ,  "JavaStringEscapeTransform"  ,  "jostraca.regexp.AnyWhiteSpace"  ,  "\\s*"  ,  "jostraca.standard.TemplateTextTransforms"  ,  "TextElementTransform, AppendNewLineTransform"  ,  "lang.TrueString"  ,  "true"  ,  "main.CodeWriter.argument.value.OutputFolder"  ,  "."  ,  "parse.regexp.CloseInnerChar"  ,  "%"  ,  "jostraca.LocalConfigFileName"  ,  "local.conf"  ,  "lang.InsertSuffix"  ,  ");"  ,  "main.MakeBackup"  ,  "no"  ,  "lang.CommentLinePrefix"  ,  "//"  ,  "parse.regexp.DirectiveMarker"  ,  "@"  ,  "parse.regexp.CloseOuterChar"  ,  ">"  ,  "jostraca.TemplateScript.CanonicalName.rb"  ,  "ruby"  ,  "lang.NameValueList.itemSeparator"  ,  ","  ,  "jostraca.regexp.SubmatchDirectiveName"  ,  "([a-zA-Z_:|][0-9a-zA-Z_:|]*)"  ,  "main.ExternalController"  ,  "java"  ,  "lang.InsertPrefix"  ,  "_insert("  ,  "parse.OpenInnerChar"  ,  "%"  ,  "lang.TemplateTextTransforms"  ,  "JavaStringEscapeTransform, TextElementTransform, AppendNewLineTransform"  ,  "main.IncludeBase"  ,  ""  ,  "lang.FalseString"  ,  "false"  ,  "parse.OpenOuterChar"  ,  "<"  ,  "jostraca.regexp.template.IncludeDirective"  ,  "<%\\s*@include\\s+(\".+?\"|[^ ]+)\\s*([a-z- ]*)\\s*%>"  ,  "jostraca.regexp.MatchExpression"  ,  "^\\s*=(\\s*.*)$"  ,  "parse.ExpressionMarker"  ,  "="  ,  "jostraca.standard.TemplateDirectiveTransforms"  ,  ""  ,  "main.SaveCodeWriter"  ,  "yes"  ,  "jostraca.regexp.template.ConfDirective"  ,  "<%\\s*@conf\\s+(.+?)\\s*%>"  ,  "parse.DirectiveMarker"  ,  "@"  ,  "jostraca.template.isLibrary"  ,  "true"  ,  "main.CodeWriterSuffix"  ,  ".java"  ,  "main.CodeWriter.argument.value.NoBackup"  ,  "false"  ,  "jostraca.regexp.SubmatchSectionName"  ,  "([a-zA-Z_:][0-9a-zA-Z_:]*)"  ,  "jostraca.TemplateScript.CanonicalName.jv"  ,  "java"  ,  "jostraca.TemplateScript.CanonicalName.py"  ,  "python"  ,  "jostraca.regexp.template.IncludeBlockDirective"  ,  "<%\\s*@include-block\\s+[\\\"']?(.+?)[\\\"']?\\s+/(.+?)/\\s*%>"  ,  "main.CodeWriterPrefix"  ,  ""  ,  "main.FileNameSuffix"  ,  ".java"  ,  "jostraca.template.path"  ,  "e:\\web\\proj\\jostraca\\conf\\..\\templates\\src\\java\\util\\GenericCollection.jtm"  ,  "main.CodeWriter.argument.name.BackupFolder"  ,  "b="  ,  "jostraca.Location"  ,  "e:\\web\\proj\\jostraca\\conf\\.."  ,  "jostraca.TemplateScript.CanonicalName.pl"  ,  "perl"  ,  "lang.TemplateScriptTransforms"  ,  "AppendNewLineTransform"  ,  "main.CodeWriter.argument.ControlPrefix"  ,  "jsa:"  ,  "java.CodeWriter.package"  ,  ""  ,  "main.FileNamePrefix"  ,  ""  ,  "jostraca.regexp.template.IncludeBaseDirective"  ,  "<%\\s*@include-base\\s+[\\\"']?(.+?)[\\\"']?\\s*%>"  ,  "lang.TextQuote"  ,  "\""  ,  "lang.NameValueList.valueQuote"  ,  "\""  ,  "main.TemplateScript"  ,  "java"  ,  "jostraca.regexp.MatchDirective"  ,  "^\\s*@([a-zA-Z_:|][0-9a-zA-Z_:|]*)(\\s*.*)$"  ,  "main.CodeWriter.argument.name.CodeWriterOutputFolder"  ,  "O="  ,  "main.CodeWriter.argument.value.BackupFolder"  ,  ".jostraca"  ,  "jostraca.template.name"  ,  "java.util.GenericCollection"  ,  "jostraca.standard.TemplateScriptTransforms"  ,  "AppendNewLineTransform"  ,  "main.CodeWriterController"  ,  "org.jostraca.BasicJavaCodeWriterController"  ,  "lang.NameValueList.nameQuote"  ,  "\""  ,  "parse.CloseInnerChar"  ,  "%"  ,  "jostraca.regexp.IsExpression"  ,  "^\\s*="  ,  "parse.CloseOuterChar"  ,  ">"  ,  "main.DumpPropertySet"  ,  "no"  ,  "lang.CodeWriterTransforms"  ,  "SimpleIndentTransform"  ,  "jostraca.template.folder"  ,  "e:\\web\\proj\\jostraca\\conf\\..\\templates\\src\\java\\util"  ,  "parse.Directives"  ,  "SectionDirective, OneLineDirective, CollapseWhiteSpaceDirective"  ,  "jostraca.properties.modifiers"  ,  "NameValueListPSM"  ,  "lang.CommentBlockSuffix"  ,  "*/"  ,  "main.OutputFolder"  ,  "."  ,  "jostraca.TemplateScript.CanonicalName.perl"  ,  "perl"  ,  "main.JostracaVersion"  ,  "0.3"  ,  "jostraca.regexp.SubmatchAnyWhiteSpaceAnyCharsAtEnd"  ,  "(\\s*.*)$"  ,  "main.CodeWriterCompiler"  ,  "org.jostraca.BasicJavaCompiler"  ,  "java.CodeWriter.extends"  ,  ""  ,  "main.CodeWriter"  ,  "JostracaCodeWriter"  ,  "jostraca.regexp.AnyWhiteSpaceAtStart"  ,  "^\\s*"  ,  "lang.CommentBlockPrefix"  ,  "/*"  ,  "main.CodeWriterOptions"  ,  "String "  ,  "main.CodeWriter.argument.name.NoBackup"  ,  "B"  ,  "lang.TemplateDirectiveTransforms"  ,  ""  ,  "jostraca.TemplateScript.CanonicalName.ruby"  ,  "ruby"  ,  "parse.regexp.ExpressionMarker"  ,  "="  ,  "lang.TemplateExpressionTransforms"  ,  "ExpressionElementTransform, AppendNewLineTransform"  ,  "main.ExternalCompilerOptions"  ,  ""  ,  "parse.regexp.SectionMarker"  ,  "!"  ,  "parse.DeclarationMarker"  ,  "!"  ,  "jostraca.system.separator"  ,  "\\"  ,  "jostraca.regexp.MatchSectionName"  ,  "^\\s*([a-zA-Z_:][0-9a-zA-Z_:]*)!(\\s*.*)$"  ,  "lang.NameValueList.pairSeparator"  ,  ","  ,  "java.CodeWriter.implements"  ,  ""  ,  "jostraca.regexp.MatchDeclaration"  ,  "^\\s*!(\\s*.*)$"  ,  "jostraca.TemplateScript.CanonicalName.python"  ,  "python"  ,  "main.CodeWriter.argument.value.CodeWriterOutputFolder"  ,  ""  ,  "jostraca.strict.version"  ,  "yes"  ,  "jostraca.version"  ,  "0.3"  ,  "main.CompileCodeWriter"  ,  "yes"  ,  "parse.regexp.OpenInnerChar"  ,  "%"  ,  "main.CodeWriterFormat"  ,  "format/BasicJavaWriterFormat.jwf"  ,  "main.AlsoGenerate"  ,  ""  ,  "jostraca.system.pathSeparator"  ,  ";"  ,  "main.BackupFolder"  ,  ".jostraca"  ,  "parse.regexp.OpenOuterChar"  ,  "<"  ,  "main.CodeBuilder"  ,  "org.jostraca.BasicCodeBuilder"  ,  "main.BackupSuffix"  ,  "-backup.txt"  ,  "jostraca.regexp.IsDirective"  ,  "^\\s*@"  ,  "main.TemplateParser"  ,  "org.jostraca.BasicTemplateParser"  ,  "main.ExternalCompiler"  ,  "jikes"  ,  "parse.regexp.DeclarationMarker"  ,  "!"  ,  "lang.section.all.Modifiers"  ,  "BlockIndenter"  ,  "jostraca.template.version"  ,  "0.1"  ,  "main.BackupPrefix"  ,  "-"  ,  "main.ShowDocumentation"  ,  "no"  ,  "main.TemplatePath"  ,  "e:\\web\\proj\\jostraca\\conf\\../templates/src"  ,  "jostraca.standard.TemplateExpressionTransforms"  ,  "ExpressionElementTransform, AppendNewLineTransform"  ,  "jostraca.standard.Directives"  ,  "SectionDirective, OneLineDirective, CollapseWhiteSpaceDirective"  ,  "jostraca.TemplateScript.CanonicalName.java"  ,  "java"  }  ; 

int   numProperties  =  propertyList  .  length  ; 

for  (  int   propI  =  0  ;  propI  <  numProperties  ;  propI  +=  2  )  { 

writer__iProperties  .  put  (  propertyList  [  propI  ]  ,  propertyList  [  propI  +  1  ]  )  ; 

} 

writer__iPropertiesInitialised  =  true  ; 

} 

