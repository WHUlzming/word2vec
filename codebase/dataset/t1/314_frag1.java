        compile("QueueEntry.java", "// @(#)$Id: QueueEntry.java 1199 2009-02-17 19:42:32Z smshaner $\n" + "\n" + "// Copyright (C) 1998, 1999 Iowa State University\n" + "\n" + "// This file is part of JML\n" + "\n" + "// JML is free software; you can redistribute it and/or modify\n" + "// it under the terms of the GNU General Public License as published by\n" + "// the Free Software Foundation; either version 2, or (at your option)\n" + "// any later version.\n" + "\n" + "// JML is distributed in the hope that it will be useful,\n" + "// but WITHOUT ANY WARRANTY; without even the implied warranty of\n" + "// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n" + "// GNU General Public License for more details.\n" + "\n" + "// You should have received a copy of the GNU General Public License\n" + "// along with JML; see the file COPYING.  If not, write to\n" + "// the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n" + "\n" + "public /*@ pure @*/ class QueueEntry {\n" + "\n" + "    public /*@ non_null @*/ Object _obj;\n" + "    public int _priorityLevel;\n" + "    public long _timeStamp;\n" + "\n" + "    /*@ private invariant_redundantly\n" + "      @    _priorityLevel >= 0 && _timeStamp >= 0L;\n" + "      @*/\n" + "\n" + "    public QueueEntry(Object argObj, int argLevel,\n" + "                      long argTimeStamp) {\n" + "        _obj = argObj;\n" + "        _priorityLevel = argLevel;\n" + "        _timeStamp = argTimeStamp;\n" + "    }\n" + "\n" + "    public boolean equals(/*@ nullable @*/ Object o) {\n" + "        if (!(o instanceof QueueEntry)) {\n" + "            return false;\n" + "        }\n" + "\n" + "        QueueEntry qe = (QueueEntry)o;\n" + "        return qe._obj == _obj\n" + "            && qe._priorityLevel == _priorityLevel\n" + "            && qe._timeStamp == _timeStamp;\n" + "    }\n" + "\n" + "    public /*@ pure @*/ int hashCode() {\n" + "        return _obj.hashCode();\n" + "    }\n" + "\n" + "    public Object clone() {\n" + "        try {\n" + "            return super.clone();\n" + "        } catch (CloneNotSupportedException e) {\n" + "            // should not happen\n" + "            throw new InternalError(e.getMessage());\n" + "        }\n" + "    }\n" + "\n" + "    public /*@ pure @*/ int getLevel() {\n" + "        return _priorityLevel;\n" + "    }\n" + "\n" + "    public /*@ pure @*/ Object getObj() {\n" + "        return _obj;\n" + "    }\n" + "\n" + "    public String toString() {\n" + "        return \"[obj: \" + _obj.toString()\n" + "            + \", priorityLevel: \" + _priorityLevel\n" + "            + \", timeStamp: \" + _timeStamp\n" + "            + \"]\";\n" + "    }\n" + "}\n" + "// @(#)$Id: PQException.java 1199 2009-02-17 19:42:32Z smshaner $\n" + "\n" + "// Copyright (C) 1998, 1999 Iowa State University\n" + "\n" + "// This file is part of JML\n" + "\n" + "// JML is free software; you can redistribute it and/or modify\n" + "// it under the terms of the GNU General Public License as published by\n" + "// the Free Software Foundation; either version 2, or (at your option)\n" + "// any later version.\n" + "\n" + "// JML is distributed in the hope that it will be useful,\n" + "// but WITHOUT ANY WARRANTY; without even the implied warranty of\n" + "// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n" + "// GNU General Public License for more details.\n" + "\n" + "// You should have received a copy of the GNU General Public License\n" + "// along with JML; see the file COPYING.  If not, write to\n" + "// the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n" + "\n" + "\n" + "class PQException extends RuntimeException {\n" + "  public PQException() { super(); }\n" + "  public PQException(String s) { super(s); }\n" + "}\n" + "// @(#)$Id: PriorityQueueUser.java 1199 2009-02-17 19:42:32Z smshaner $\n" + "\n" + "// Copyright (C) 1998, 1999 Iowa State University\n" + "\n" + "// This file is part of JML\n" + "\n" + "// JML is free software; you can redistribute it and/or modify\n" + "// it under the terms of the GNU General Public License as published by\n" + "// the Free Software Foundation; either version 2, or (at your option)\n" + "// any later version.\n" + "\n" + "// JML is distributed in the hope that it will be useful,\n" + "// but WITHOUT ANY WARRANTY; without even the implied warranty of\n" + "// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n" + "// GNU General Public License for more details.\n" + "\n" + "// You should have received a copy of the GNU General Public License\n" + "// along with JML; see the file COPYING.  If not, write to\n" + "// the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n" + "\n" + "\n" + "interface PriorityQueueUser {\n" + "\n" + " /*@ also\n" + "   @   public normal_behavior\n" + "   @     ensures \\result <==>\n" + "   @       (\\exists QueueEntry e; e != null;\n" + "   @                              e._obj == argObj);\n" + "   @*/\n" + " /*@ pure @*/ boolean contains(Object argObj);\n" + "\n" + " /*@ also\n" + "   @   public normal_behavior\n" + "   @     requires true;\n" + "   @     ensures\n" + "   @       (\\exists QueueEntry r;\n" + "   @           \\result == r._obj;\n" + "   @           (\\forall QueueEntry o;\n" + "   @              !(r.equals(o));\n" + "   @               r._priorityLevel >= o._priorityLevel\n" + "   @               && (r._priorityLevel == o._priorityLevel\n" + "   @                   ==> r._timeStamp < o._timeStamp) ) );\n" + "   @ also\n" + "   @   public exceptional_behavior\n" + "   @     requires true;\n" + "   @     signals_only PQException;\n" + "   @*/\n" + " /*@ pure @*/ Object next() throws PQException;\n" + "\n" + " /*@ also\n" + "   @   public normal_behavior\n" + "   @     requires true;\n" + "   @     ensures (\\exists QueueEntry e;\n" + "   @         e._obj == argObj;\n" + "   @         true);\n" + "   @ also\n" + "   @   public normal_behavior\n" + "   @     requires !true;\n" + "   @     assignable \\nothing;\n" + "   @     ensures \\not_modified(entries);\n" + "   @*/\n" + " void remove(Object argObj);\n" + "\n" + " /*@ also\n" + "   @   public normal_behavior\n" + "   @     ensures \\result <==> true;\n" + "   @*/\n" + " /*@ pure @*/ boolean isEmpty();\n" + "}\n");
